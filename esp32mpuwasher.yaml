esphome:
  name: esp32mpuwasher
  on_boot:
    then:
       script.execute: consider_deep_sleep

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "64Awxm9zqqi3PdW7EESIaxGYAFiRj8zWVerHKfH4l5g="

ota:
  platform: esphome
  password: "f8fb9283f7d3c3a355581ad000916eb9"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32Mpuwasher Fallback Hotspot"
    password: "DLVEhor7dV76"
  
i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a
  
globals:
  - id: washer_delta_accel_x
    type: float
  - id: washer_delta_accel_y
    type: float
  - id: washer_delta_accel_z
    type: float


# Deep Sleep

deep_sleep:
  id: deep_sleep_control
 # run_duration:  1min
  sleep_duration: 60min


sensor:
  - platform: adc
    pin: GPIO035
    name: "Washer Battery Volts"
    id: washer_battery_volts
    update_interval: 10min
    attenuation: auto
    accuracy_decimals: 3
    internal: false

  - platform: mpu6050
    update_interval: 0.25s
    address: 0x68
    accel_x:
      accuracy_decimals: 1
      name: "Washer Accel X"
      id: washer_accel_x
      internal: true
      filters:
        - lambda: |-
            id(washer_delta_accel_x) = fabsf(id(washer_accel_x).state - x);
            return(x);
    accel_y:
      accuracy_decimals: 1
      name: "Washer Accel Y"
      id: washer_accel_y
      internal: true
      filters:
        - lambda: |-
            id(washer_delta_accel_y) = fabsf(id(washer_accel_y).state - x);
            return(x);
    accel_z:
      accuracy_decimals: 1
      name: "Washer Accel Z"
      id: washer_accel_z
      internal: true
      filters:
        - lambda: |-
            id(washer_delta_accel_z) = fabsf(id(washer_accel_z).state - x);
            return(x);
    temperature:
      name: "Washer Temperature"
      filters:
        - heartbeat: 60s
        

binary_sensor:
  - platform: homeassistant
    id: washer_status
    entity_id: input_boolean.washer_status
    
  - platform: homeassistant
    id: prevent_deep_sleep
    entity_id: input_boolean.prevent_deep_sleep

  - platform: template
    device_class: vibration
    name: "Washer Vibration"
    id: washer_vibration
    lambda: |-
      if (isnan(id(washer_delta_accel_x)) or isnan(id(washer_delta_accel_y)) or isnan(id(washer_delta_accel_z))) {
        id(washer).publish_state("Idle");
        return {};
      }
      else if (abs(id(washer_delta_accel_x)) > 0.7 or abs(id(washer_delta_accel_y)) > 0.7 or abs(id(washer_delta_accel_z)) > 0.7) {
        return(true);
      } else {
        return(false);
      }
    filters:
      - delayed_on: 2sec
      - delayed_off: 5min
    on_press:
      then:
        - text_sensor.template.publish:
            id: washer
            state: Washing
            
    on_release:
      then:
        - text_sensor.template.publish:
            id: washer
            state: Idle
            
text_sensor:
  - platform: template
    icon: mdi:washer
    name: Washer
    id: washer

script:
  - id: consider_deep_sleep
    mode: queued
    then:
      - delay: 1min
      - if:
          condition:
            binary_sensor.is_on: prevent_deep_sleep
          then:
            - logger.log: 'Skipping sleep, per prevent_deep_sleep'
          else:
            - deep_sleep.enter: deep_sleep_control
      - script.execute: consider_deep_sleep




captive_portal:
    